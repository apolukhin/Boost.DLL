# Use, modification, and distribution are
# subject to the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
# Copyright Antony Polukhin, 2016-2024.

#
# See https://svn.boost.org/trac/boost/wiki/TravisCoverals for description of this file
# and how it can be used with Boost libraries.
#
# File revision #6 (DIFF)

init:
    # boost-local/libs/ folder to put this library into. This may be useful, if you're for example running Travis
    # from `Boost.DLL` repo while Boost already has `dll` and with to replace `dll` with content of`Boost.DLL`.
    #
    # Otherwise just leave the default value - set BOOST_LIBS_FOLDER=%APPVEYOR_PROJECT_NAME%
    - set BOOST_LIBS_FOLDER=dll # DIFF

###############################################################################################################
# From this point and below code is same for all the Boost libs
###############################################################################################################

version: 1.87.{build}-{branch}
 
# branches to build
branches:
  except:
    - gh-pages

skip_tags: true

environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      TOOLSET: msvc-14.1
      CXXSTD: 14,17
      ADDRMD: 32,64
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      TOOLSET: msvc-14.2
      CXXSTD: 14,17,latest  # latest is C++2a
      ADDRMD: 32,64
    # TODO: Clang 32bit job yields:
    # LINK : fatal error LNK1171: unable to load mspdbcore.dll (error code: 126)
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      TOOLSET: clang-win
      CXXSTD: 14,17
      ADDRMD: 64
    # Some issue with stdcxx=14 builds:
    # clang-cl: error: linker command failed with exit code 1181 (use -v to see invocation)
    # "clang-cl.exe" "clang-cl.exe" -m64 -m64 /link /link /incremental:no /incremental:no /manifest /manifest /DLL /subsystem:console /subsystem:console /out:"..\..\..\bin.v2\libs\dll\test\clang-win-9.0.1\release\address-model-64\cxxstd-14-iso\threading-multi\library1-clangw9-mt-x64-1_73.dll" /IMPLIB:"..\..\..\bin.v2\libs\dll\test\clang-win-9.0.1\release\address-model-64\cxxstd-14-iso\threading-multi\library1-clangw9-mt-x64-1_73.lib"    @"..\..\..\bin.v2\libs\dll\test\clang-win-9.0.1\release\address-model-64\cxxstd-14-iso\threading-multi\library1-clangw9-mt-x64-1_73.dll.rsp"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      TOOLSET: clang-win
      CXXSTD: 17,2a
      ADDRMD: 32,64
      
    # TODO: Both Cygwins have problems with <link.h> and `dladdr`
    #- APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    #  ADDPATH: C:\cygwin\bin;
    #  TOOLSET: gcc
    #  CXXSTD: 11,14,1z
    #- APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    #  ADDPATH: C:\cygwin64\bin;
    #  TOOLSET: gcc
    #  CXXSTD: 11,14,1z
    # MinGW 32 bit is not supported by boost system any more
    #- APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    #  ADDPATH: C:\mingw\bin;
    #  TOOLSET: gcc
    #  CXXSTD: 11,14,1z
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      ADDPATH: C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\bin;
      TOOLSET: gcc
      CXXSTD: 11,14,1z

before_build:
    - set BOOST_BRANCH=develop
    - if "%APPVEYOR_REPO_BRANCH%" == "master" set BOOST_BRANCH=master
    - echo "Testing %APPVEYOR_PROJECT_NAME%"
    # Cloning Boost libraries (fast nondeep cloning)
    - set BOOST=C:/boost-local
    - git clone -b %BOOST_BRANCH% --depth 10 https://github.com/boostorg/boost.git %BOOST%
    - cd %BOOST%
    - git submodule update --init --depth 10 tools/build tools/boostdep

    - rm -rf %BOOST%/libs/%BOOST_LIBS_FOLDER%
    - mv -f %APPVEYOR_BUILD_FOLDER% %BOOST%/libs/%BOOST_LIBS_FOLDER%
    - python tools/boostdep/depinst/depinst.py --git_args "--depth 10 --jobs 2" %BOOST_LIBS_FOLDER%

build_script:
    - bootstrap.bat --with-toolset=msvc
      || ( echo === bootstrap.log === && cat bootstrap.log && exit /b 1 )
    - b2.exe headers
    - cd %BOOST%/libs/%BOOST_LIBS_FOLDER%/test

after_build:
before_test:
test_script:
  - PATH=%ADDPATH%%PATH%
  - if not "%CXXSTD%" == "" set CXXSTD=cxxstd=%CXXSTD%
  - if not "%ADDRMD%" == "" set ADDRMD=address-model=%ADDRMD%
  - echo "Running command ..\..\..\b2 -j3 toolset=%TOOLSET% %CXXSTD% %ADDRMD% variant=debug,release"
  # `embed-manifest=off` part required to Clang on VS2019 image (for some reason Boost.Build does not find `mt.exe`)
  - ..\..\..\b2.exe -j3 toolset=%TOOLSET% %CXXSTD% %ADDRMD% variant=debug,release cxxflags="-DBOOST_TRAVISCI_BUILD" embed-manifest=off

after_test:
on_success:
on_failure:
on_finish:
